#!/bin/sh

# Author:     Héctor Molinero Fernández <hector@molinero.dev>
# Repository: https://github.com/hectorm/music-dl
# License:    MIT, https://opensource.org/licenses/MIT

set -eu
export LC_ALL='C'

printInfo() { [ -t 1 ] && printf '\033[0m[\033[1;32mINFO\033[0m] %s\n' "${@}" || printf '[INFO] %s\n' "${@}"; }
printWarn() { [ -t 1 ] && printf '\033[0m[\033[1;33mWARN\033[0m] %s\n' "${@}" >&2 || printf '[WARN] %s\n' "${@}" >&2; }
printError() { [ -t 1 ] && printf '\033[0m[\033[1;31mERROR\033[0m] %s\n' "${@}" >&2 || printf '[ERROR] %s\n' "${@}" >&2; }

main() {
	outDir="${DESTDIR:-${HOME:?}/Downloads/}"
	[ -e "${outDir:?}" ] || mkdir -p "${outDir:?}"

	tmpDir="$(mktemp -dt music-dl.XXXXXXXX)"
	# shellcheck disable=SC2154
	trap 'ret="$?"; rm -rf -- "${tmpDir:?}"; trap - EXIT; exit "${ret:?}"' EXIT TERM INT HUP

	ffmpegCmd=''
	if command -v ffmpeg >/dev/null; then ffmpegCmd='ffmpeg'
	else
		printError 'ffmpeg is required for this script'
		exit 1
	fi

	ytDlpCmd=''
	if command -v yt-dlp >/dev/null; then ytDlpCmd='yt-dlp'
	elif command -v youtube-dl >/dev/null; then ytDlpCmd='youtube-dl'
	else
		printError 'yt-dlp or youtube-dl are required for this script'
		exit 1
	fi

	printInfo 'Downloading files...'
	"${ytDlpCmd:?}" \
		--no-continue \
		--format 'bestaudio' \
		--output "${tmpDir:?}/%(title)s.%(ext)s" \
		--default-search 'ytsearch' \
		-- "$@"

	printInfo 'Encoding files to Opus and trimming silence...'
	for inFile in "${tmpDir:?}"/*.*; do
		outFile="${outDir:?}/${inFile##*/}"; outFile="${outFile%.*}.opus"
		filter='silenceremove=start_periods=1:start_threshold=-60dB:start_silence=1:stop_periods=1:stop_threshold=-60dB:stop_silence=1:detection=peak'
		"${ffmpegCmd:?}" -hide_banner \
			-i "${inFile:?}" \
			-codec:a libopus -b:a 160000 -vbr on -compression_level 10 -application audio \
			-bitexact -map_metadata -1 \
			-filter:a "${filter:?}" \
			-y "${outFile:?}"
	done
}

main "${@-}"
